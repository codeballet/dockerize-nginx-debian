events {}


http {

    include mime.types;

    gzip on;
    gzip_comp_level 3;

    gzip_types text/css;
    gzip_types text/javascript;

    # Redirect all traffic to HTTPS
    server {
        listen 80;
        server_name localhost;
        return 301 https://$host$request_uri;
    }
    
    server {
        
        # use SSL and HTTPS
        listen 443 ssl http2;
        server_name localhost;

        root /sites/demo;

        index index.html;

        ssl_certificate /etc/nginx/ssl/self.crt;
        ssl_certificate_key /etc/nginx/ssl/self.key;

        # Disable SSL, use TLS instead
        ssl_protocols TLSv1.2 TLSv1.3;

        # Optimise cipher suits from https://www.ssl.com/guide/tls-standards-compliance/
        ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
        ssl_prefer_server_ciphers on;

        # Enable DH Params
        ssl_dhparam /etc/nginx/ssl/dhparam.pem;

        # Enable HSTS
        add_header Strict-Transport-Security "max-age=31536000" always;

        # SSL session
        ssl_session_cache shared:SSL:40m;
        ssl_session_timeout 4h;
        ssl_session_tickets on;

        location / {
            try_files $uri $uri/ =404;
        }

        # server push files with http2
        location = /index.html {
            http2_push /style.css;
            http2_push /screenshot.png;
        }
        
        # cache static files
        location ~* \.(css|js|jpg|png) {
            access_log off;
            add_header Cache-Control public;
            add_header Pragma public;
            add_header Vary Accept-Encoding;
            expires 1M;
        }

    }

}
